type RaffleManager @entity {
    id: ID! # concat registrationContractId and drawNumber
    currentDrawNumber: BigInt
    currentStatus: String
}

type RaffleRegistration @entity {
    id: ID! #registrationContractId
    currentDrawNumber: BigInt
    currentStatus: String
    chain: String
}

type Participation @entity {
    id: ID! # Extrinsic hash
    registrationContractId: BigInt! @index
    drawNumber: BigInt! @index
    accountId: String! @index # Account Address
    numbers: [BigInt]!
    chain: String
    timestamp: Date!
}

type Raffle @entity {
    id: ID! # concat registrationContractId and drawNumber
    registrationContractId: BigInt! @index
    drawNumber: BigInt! @index
    openOn: BigInt # BlockNumber
    openingHash: String # Hash
    closedOn: BigInt # BlockNumber
    closingHash: String # Hash
    salt: String
    saltGeneratedOn: BigInt # BlockNumber
    saltGeneratedHash: String # Hash
    resultsReceivedOn: BigInt # BlockNumber
    resultsReceivedHash: String # Hash
}

type Result @entity {
    id: ID! # Extrinsic hash
    drawNumber: BigInt! @index
    numbers: [BigInt]!
}

type Winner @entity {
    id: ID! # concat account + num_raffle
    drawNumber: BigInt! @index
    accountId: String! # Account Address
}

